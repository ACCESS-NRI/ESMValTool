:: _outputdata:

*****************
ESMValTool output
*****************

ESMValTool produces a new folder every run. The location is determined by your config.yml 
output_dir variable, recipe name, YYYYMMDD & HHMMSS

ie: output_folder/recipe_ocean_amoc_20190118_1027/
if produced by the combination:

  $output_dir/recipe_name_YYYYMMDD_HHMMSS/



This folder will contain 4 further folders:

1. preproc: This folder contains all the preprocessed netcdfs data & metadata.

2. run: This directory includes all log files, a copy of the recipe, settings.yml, metadata.yml (more on these below). 

3. work: A place for post processed files like NetCDF (depends on the diagnostics).

4. plots: The location for all the plots, split by individual diagnostics and fields.



Preprocessed datasets
=====================

The preprocessed datasets will be sent to the preproc/ directory.

If the option save_intermediary_cubes is set to True in the config-user.yml file, then
the intermediary cubes will also be saved here.



Diagnostic output
=================

The work/ directory will contain all cubes that are output at the diagnostic stage.
Ie, the model data is preprocessed by ESMValTool and stoed in the preproc/ directory.
These files are opened by the diagnostic script, then some processing is applied.
Once the diagnostic level processing has been applied, the resulting cubes should then 
be saved to the work directory.

It is possible to write your diagnostic such that it checks for the existance of 
relevant processed cubes in the work directory. This means that re-running the
diagnostic could be sped up.

In python-based diagnostics, the work directory can be accessed with via the cfg dictionairy
item, 'work_dir' ie: cfg['work_dir']




Plots
=====

The plots folder is where your diagnostics should save the output figures. 

In python-based diagnostics, the plot directory can be accessed with via the cfg dictionairy
item, 'plot_dir' ie: cfg['plot_dir']


Run
===
 
The run files are automatically generated by ESMValTool and create a record of the 
output messages produced by ESMValTool and they are saved i nthe run directory. 
They can be helpful for debugging or monitoring the job.
 
The run directory will also contain a copy of the recipe and the 
settings.yml and metadata.yml files.
These files are described below.
 
Settings.yml
============

The settings.yml file is automatically generated by ESMValTool.

Passes several things that your diagnostic sript needs to know.
This includes several flags from the config-user.yml file
and the location on disk of the metadata.yml file (described below).

 
input_files:[/users/modellers/ledm/workspace/ESMValToolTest/run/GlobalOcean/recipe_ocean_bgc_20190118_134855/preproc/diag_timeseries_scalars/mfo/metadata.yml]
log_level: debug
max_data_filesize: 100
output_file_type: png
plot_dir: /users/modellers/ledm/workspace/ESMValToolTest/run/GlobalOcean/recipe_ocean_bgc_20190118_134855/plots/diag_timeseries_scalars/Scalar_timeseries
profile_diagnostic: false
recipe: recipe_ocean_bgc.yml
run_dir: /users/modellers/ledm/workspace/ESMValToolTest/run/GlobalOcean/recipe_ocean_bgc_20190118_134855/run/diag_timeseries_scalars/Scalar_timeseries
script: Scalar_timeseries
version: 2.0a1
work_dir: /users/modellers/ledm/workspace/ESMValToolTest/run/GlobalOcean/recipe_ocean_bgc_20190118_134855/work/diag_timeseries_scalars/Scalar_timeseries
write_netcdf: true
write_plots: true




Metadata.yml
============

The metadata.yml files is automatically generated by ESMValTool.
It passes everything that your diagnostic needs to know in order to run.

The metadata is loaded from cfg as a dictionairy object in python diagnostics.

?
/users/modellers/ledm/workspace/ESMValToolTest/run/GlobalOcean/recipe_ocean_bgc_20190118_134855/preproc/diag_timeseries_scalars/mfo/CMIP5_HadGEM2-ES_Omon_historical_r1i1p1_TO0M_mfo_2002-2004.nc
: cmor_table: CMIP5
  dataset: HadGEM2-ES
  diagnostic: diag_timeseries_scalars
  end_year: 2004
  ensemble: r1i1p1
  exp: historical
  field: TO0M
  filename:
/users/modellers/ledm/workspace/ESMValToolTest/run/GlobalOcean/recipe_ocean_bgc_20190118_134855/preproc/diag_timeseries_scalars/mfo/CMIP5_HadGEM2-ES_Omon_historical_r1i1p1_TO0M_mfo_2002-2004.nc
  frequency: mon
  institute: [INPE, MOHC]
  long_name: Sea Water Transport
  mip: Omon
  modeling_realm: [ocean]
  preprocessor: prep_timeseries_scalar
  project: CMIP5
  recipe_dataset_index: 0
  short_name: mfo
  standard_name: sea_water_transport_across_line
  start_year: 2002
  units: kg s-1
  variable_group: mfo





