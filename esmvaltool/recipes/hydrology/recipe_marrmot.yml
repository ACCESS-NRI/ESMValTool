# ESMValTool
# recipe_marrmot.yml
---
documentation:
  description: |
    Recipe pre-processes ERA-Interim reanalyses files for use in the MARRMoT hydrological model.

    MARRMoT is the Modular Assessment of Rainfall-Runnoff Models Toolbox ...
    https://www.geosci-model-dev.net/12/2463/2019/
  authors: ['kalverla_peter', 'camphuijsen_jaro']
  projects: ['ewatercycle']
  references: ['acknow_project']

preprocessors:
  daily: &daily
    extract_shape:
      # Lumped model: needs catchment-aggregated input data
      shapefile: rhine_meuse_hydrosheds.shp  # In aux (config-user.yml)
      method: contains
      crop: true
    # area_statistics: # done in diag because non-linear PET functions
    #   operator: mean
  hourly_thermodynamics:
    <<: *daily
    daily_statistics:
      operator: mean
  hourly_water:
    <<: *daily
    daily_statistics:
      operator: sum
  hourly_radiation:
    <<: *daily
    daily_statistics:
      operator: sum

diagnostics:
  diagnostic_daily_data:
    description: marrmot input preprocessor for daily data
    additional_datasets:
      - {dataset: ERA-Interim, project: OBS6, tier: 3, type: reanaly, version: 1}
    variables:
      tas: &var_daily
        mip: day
        start_year: 2000
        end_year: 2000
        preprocessor: daily
      pr: *var_daily
      # evspsblpot:  # doesn't exist.
      # Reconstruct evspsblpot using:
      psl: *var_daily
      rsds: *var_daily
      rsdt:
        <<: *var_daily
        mip: CFday
    scripts:
      script:
        script: hydrology/marrmot.py

  # diagnostic_hourly_data:
  #   description: marrmot input preprocessor for hourly data
  #   additional_datasets:
  #     - {dataset: ERA5, project: OBS6, tier: 3, type: reanaly, version: 1}
  #   variables:
  #     tas: &var_hourly
  #       mip: E1hr
  #       start_year: 2000
  #       end_year: 2000
  #       preprocessor: hourly_thermodynamics
  #     pr:
  #       <<: *var_hourly
  #       preprocessor: hourly_water
  #     # MARRMoT requires PET. Thus, we might also need...
  #     # This is what we did for wflow for *evaporation* (PET = evapoTRANSPIration)
  #     psl:
  #       <<: *var_hourly
  #       preprocessor: hourly_thermodynamics
  #     rsds:
  #       <<: *var_hourly
  #       preprocessor: hourly_radiation
  #     tdps:
  #       <<: *var_hourly
  #       mip: Eday
  #       preprocessor: hourly_thermodynamics
  #     rsdt:
  #       <<: *var_hourly
  #       preprocessor: hourly_radiation
  #       mip: CFday
  #     # Alternatively, we might use (but this is inconsistent with ERA-Interim):
  #     evspsblpot:
  #       <<: *var_hourly
  #       preprocessor: hourly_water
  #   scripts:
  #     script:
  #       script: hydrology/marrmot.py
