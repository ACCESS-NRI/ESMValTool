---

datasets:
  - {dataset: bcc-csm1-1,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  - {dataset: GFDL-ESM2G,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  - {dataset: MPI-ESM-LR,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  - {dataset: MPI-ESM-MR,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  - {dataset: CCSM4,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2001}
  - {dataset: CanESM2,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  - {dataset: CMCC-CM,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  - {dataset: ACCESS1-3,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  - {dataset: ACCESS1-0,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  - {dataset: CSIRO-Mk3-6-0,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  - {dataset: IPSL-CM5A-LR,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  - {dataset: IPSL-CM5A-MR,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  - {dataset: HadCM3,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  - {dataset: HadGEM2-ES,  project: CMIP5,  mip: Omon,  exp: historical,  ensemble: r1i1p1,  start_year: 2000,  end_year: 2002}
  

preprocessors:

  preprocessor1: {}

diagnostics:

  derive_diagnostic:
    description: Derive ocean variables
    variables:
      thetao:
        preprocessor: preprocessor1
        field: T3OM
        fx_files: [areacello]
      so:
        preprocessor: preprocessor1
        field: T3OM
        fx_files: [areacello]
      # uo:
      #   preprocessor: preprocessor1
      #   field: T3OM
      # vo:
      #   preprocessor: preprocessor1
      #   field: T3OM
    additional_datasets:
      - {dataset: PHC,        project: OBS,    tier: 2,    type: climatology,    version: 3,        start_year: 1800,  end_year: 1800}
    scripts:
      script1: &Global_Ocean_surface_map
        script: ocean3d/ocean3d.py
        # Define if we calculate data for Hovmoeller diagrams. 
        # This data are also needed for mean vertical profiles.
        hofm_data: True
        # Define regions, as a list. 
        # 'EB' - Eurasian Basin of the Arctic Ocean
        # 'AB' - Amerasian Basin of the Arctic Ocean
        # 'Barents_sea' - Barrents Sea
        # 'North_sea'   - North Sea
        hofm_regions: ["AB" ,  'EB']
        # Define variables to use, should also be in "variables" entry of your diagnostic 
        hofm_vars: ['thetao', 'so']
        # Maximum depth of Hovmoeller and vertical profiles
        hofm_depth: 1500
        # Define if Hovmoeller diagrams will be ploted.
        hofm_plot: True
        # Define colormap (as a list, same size as list with variables)
        # Only cmaps from matplotlib and cmocean are supported. 
        # Additional cmap - 'custom_salinity1'.
        hofm_cmap: ['Spectral_r', 'custom_salinity1'] 
        hofm_limits: [[-2, 2.3, 41, 1], [30.5, 35.1, 47, 2]]
        # Number of columns in the plot
        hofm_ncol: 3
        mean: True
        profiles: True
        plot2d: True
        plot2d_depths: [10, 100, 200, 300, 400, 500, 1000, 2000, 3000, 4000]
        plot2d_vars: ['thetao', 'so']
        plot2d_cmap: ['Spectral_r', 'custom_salinity1'] 
        plot2d_limits: [[-2, 4, 20, 1], [30.5, 35.1, 47, 2]]
        plot2d_ncol: 3
        plot2d_bias: True
        plot2d_bias_depths: [10, 100, 200, 300, 400]
        plot2d_bias_vars: ['thetao', 'so']
        plot2d_bias_cmap: ['balance', 'balance'] 
        plot2d_bias_limits: [[-3, 3, 20, 1], [-2, 2, 47, 2]]
        plot2d_bias_ncol: 3
        transects: True
        transects_regions: ["AWpath", "Fram"]
        transects_vars: ['thetao', 'so']
        transects_cmap: ['Spectral_r', 'custom_salinity1'] 
        transects_limits: [[-2, 4, 20, 1], [30.5, 35.1, 47, 2]]
        transects_depth: 1500
        transects_ncol: 3
        # one has to have  `hofm_data`: True and "EB" as one of the `hofm_regions`
        AW_core: True
        AW_core_2d: True
        tsdiag: True
        tsdiag_regions: ["AB" ,  'EB']
        tsdiag_depth: 1500
        tsdiag_ncol: 3









  #     script2: &Global_Ocean_surface_map2
  #       script: ocean3d/ocean3d.py
  #       testing: "I am in script 2"

  # derive_diagnostic2:
  #   description: Derive ocean variables
  #   variables:
  #     thetao:
  #       preprocessor: preprocessor1
  #       field: T3OM
  #       fx_files: [areacello]
  #     so:
  #       preprocessor: preprocessor1
  #       field: T3OM
  #       fx_files: [areacello]
  #     # uo:
  #     #   preprocessor: preprocessor1
  #     #   field: T3OM
  #     # vo:
  #     #   preprocessor: preprocessor1
  #     #   field: T3OM
  #   additional_datasets:
  #     - {dataset: PHC,        project: OBS,    tier: 2,    type: climatology,    version: 3,        start_year: 1800,  end_year: 1800}
  #   scripts:
  #     script3: &Global_Ocean_surface_map3
  #       script: ocean3d/ocean3d.py
  #       testing: "I am in script 3"
  #     script4: &Global_Ocean_surface_map4
  #       script: ocean3d/ocean3d.py
  #       testing: "I am in script 4"




# diagnostics:


#   diagnostic1:
#     description: Air temperature and precipitation Python tutorial diagnostic.
#     variables:
#       thetao:
#         preprocessor: preprocessor1
#         field: T3OM
#         # reference_model: ERA-Interim
        # additional_models:
        #   - {model: NCEP,        project: OBS,    tier: 2,    type: reanaly,    version: 1,        start_year: 2000,  end_year: 2002}
      # pr:
      #   preprocessor: preprocessor2
      #   field: T2Ms
      #   reference_model: ERA-Interim
    # scripts: null
      # script1:
      #   script: examples/diagnostic.py
      #   quickplot:
      #     plot_type: pcolormesh
